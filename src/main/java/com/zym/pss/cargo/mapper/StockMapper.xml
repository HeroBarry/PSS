<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zym.pss.cargo.mapper.StockMapper">
	<resultMap id="StockRM" type="Stock">
		<id property="id" column="id"/>
		
		<result property="repositoryNo" column="repository_no"/>
		<result property="goodsNo" column="goods_no"/>
		<result property="goodsName" column="goods_name"/>
		<result property="goodsType" column="goods_type"/>
		<result property="amount" column="amount"/>
		<result property="packingUnit" column="packing_unit"/>
		
		<result property="tenantId" column="tenant_id"/>
	</resultMap>
	
	<!-- 查询列表 -->
	<select id="find" parameterType="map" resultMap="StockRM">
		select * from stock
		<where>
			tenant_id = #{tenantId}
			<if test="materialNo != null"> AND materialNo = #{materialNo}</if>
		</where>
	</select>
	
		<!-- 分页查询 -->
	<select id="findPage" resultMap="StockRM">
		select * from stock
	</select>
	
	<!-- 获取单个 -->
	<select id="get" parameterType="string" resultMap="StockRM">
		select * from stock 
		where id = #{pid}
	</select>
	
	<!-- 添加 -->
	<insert id="insert" parameterType="Stock">
		insert into stock 
		(id,repository_no,goods_no,goods_name,goods_type,amount,packing_unit,tenant_id)
		values
		(
			#{id , jdbcType = VARCHAR},
			#{repositoryNo , jdbcType = VARCHAR},
			#{goodsNo , jdbcType = VARCHAR},
			#{goodsName , jdbcType = VARCHAR},
			#{goodsType , jdbcType = VARCHAR},
			#{amount , jdbcType = INTEGER},
			#{packingUnit , jdbcType = VARCHAR},
			#{tenantId , jdbcType = VARCHAR}
		)
	</insert>
	<!-- 修改 -->
	<update id="update" parameterType="Stock">
		update stock
		<set>
			<if test="repositoryNo != null">repository_no = #{repositoryNo},</if>
			<if test="goodsNo != null">goods_no = #{goodsNo},</if>
			<if test="goodsName != null">goods_name = #{goodsName},</if>
			<if test="goodsType != null">goods_type = #{goodsType},</if>
			<if test="amount != null">amount = #{amount},</if>
			<if test="packingUnit != null">packing_unit = #{packingUnit},</if>
		</set>
		where id = #{id}
	</update>
	<!-- 删除单个 -->
	<delete id="deleteById" parameterType="string">
		delete from stock 
		where id = #{pid}
	</delete>
		<!-- 批量删除 -->
	<delete id="delete" parameterType="string">
		delete from stock 
		where id in
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
	
	<!-- 根据物品编号,库存编号查询库存记录 -->
	<select id="findByGoodNo" parameterType="map" resultMap="StockRM">
		select * from stock 
		where tenant_id = #{tenantId} AND goods_no = #{goodNo} and repository_no = #{repositoryNo}
	</select>
	
	<!-- 根据物品标号和仓库编号,更新库存量 -->
	<update id="updateStockAmount" parameterType="map">
		update stock
		set amount = #{amount}
		where tenant_id = #{tenantId} AND goods_no = #{goodNo} and repository_no = #{repositoryNo}
	</update>
</mapper>